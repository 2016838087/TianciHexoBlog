{
    "version": "https://jsonfeed.org/version/1",
    "title": "TianciBlog • All posts by \"dotnet\" category",
    "description": "一身清贫怎敢入繁华<br>两袖清风岂能误佳人",
    "home_page_url": "https://lovetianci.cn",
    "items": [
        {
            "id": "https://lovetianci.cn/2020/07/09/csharp0709/",
            "url": "https://lovetianci.cn/2020/07/09/csharp0709/",
            "title": ".NET Core WebAPI使用EFCore连接MySQL",
            "date_published": "2020-07-09T10:00:00.000Z",
            "content_html": "<h2 id=\"记录一下net\"><a class=\"markdownIt-Anchor\" href=\"#记录一下net\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS00Z3F3YTA5M2t5MDViLk5FVA==\">记录一下.NET</span> Core 使用 EFCore 连接 MySQL 数据库</h2>\n<a id=\"more\"></a>\n<h3 id=\"首先从nuget包里面找到mysqldataentityframeworkcore进行安装\"><a class=\"markdownIt-Anchor\" href=\"#首先从nuget包里面找到mysqldataentityframeworkcore进行安装\">#</a> 首先从 nuget 包里面找到 MySQL.Data.EntityFrameworkCore 进行安装</h3>\n<p><img data-src=\"EFCore.png\" alt=\"EFCore\"></p>\n<h3 id=\"因为我的net\"><a class=\"markdownIt-Anchor\" href=\"#因为我的net\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zaXFyNHN2dWprc3UuTkVU\">因为我的.NET</span> Core 是最新版本 3.1，所以这个 EFCore 我安装的也是最新版本 8.0.20</h3>\n<h3 id=\"第一步在配置文件appsettingsjson里面添加连接字符串\"><a class=\"markdownIt-Anchor\" href=\"#第一步在配置文件appsettingsjson里面添加连接字符串\">#</a> 第一步在配置文件 appsettings.json 里面添加连接字符串</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">\"ConnectionStrings\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"server=本地或者线上地址;uid=用户名;pwd=密码;port=端口号;database=需要连接的数据库名称;SslMode=None\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"第二步添加数据库上下文类\"><a class=\"markdownIt-Anchor\" href=\"#第二步添加数据库上下文类\">#</a> 第二步添加数据库上下文类</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EFCoreDbContext</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">DbContext</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>UserInfo<span class=\"token punctuation\">></span></span> Users <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 将实体类添加 Context 中</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">EFCoreDbContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptions<span class=\"token punctuation\">&lt;</span>EFCoreDbContext<span class=\"token punctuation\">></span></span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"第三步startupcs里面的configureservices方法下面读取服务添加到容器\"><a class=\"markdownIt-Anchor\" href=\"#第三步startupcs里面的configureservices方法下面读取服务添加到容器\">#</a> 第三步 Startup.cs 里面的 ConfigureServices 方法下面读取服务添加到容器</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddDbContext</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>EFCoreDbContext<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>options<span class=\"token punctuation\">.</span><span class=\"token function\">UseMySQL</span><span class=\"token punctuation\">(</span>Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"最后在需要使用到数据库的控制器内添加构造函数初始化数据库上下文类\"><a class=\"markdownIt-Anchor\" href=\"#最后在需要使用到数据库的控制器内添加构造函数初始化数据库上下文类\">#</a> 最后在需要使用到数据库的控制器内添加构造函数，初始化数据库上下文类</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 初始化数据库上下文</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">EFCoreDbContext</span> _efCoreDbContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/// 构造及初始化类参数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token function\">ImageController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EFCoreDbContext</span> coreDbContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  _efCoreDbContext <span class=\"token operator\">=</span> coreDbContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"最后接口通过上下文类取出相应的数据如果数据不为空则连接成功\"><a class=\"markdownIt-Anchor\" href=\"#最后接口通过上下文类取出相应的数据如果数据不为空则连接成功\">#</a> 最后接口通过上下文类取出相应的数据，如果数据不为空则连接成功</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://lovetianci.cn/2020/07/03/csharp0703/",
            "url": "https://lovetianci.cn/2020/07/03/csharp0703/",
            "title": ".NET Core WebAPI全局异常处理",
            "date_published": "2020-07-03T08:00:00.000Z",
            "content_html": "<h2 id=\"今天记录一下net\"><a class=\"markdownIt-Anchor\" href=\"#今天记录一下net\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS00Z3F3YTU4YzI1NGF6d2h0bzNlLk5FVA==\">今天记录一下.NET</span> Core WebAPI 的全局异常处理</h2>\n<a id=\"more\"></a>\n<h3 id=\"上代码先创建一个类命名就叫exceptionfilter继承于exceptionfilterattribute\"><a class=\"markdownIt-Anchor\" href=\"#上代码先创建一个类命名就叫exceptionfilter继承于exceptionfilterattribute\">#</a> 上代码，先创建一个类，命名就叫 ExceptionFilter 继承于 ExceptionFilterAttribute</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionFilter</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">ExceptionFilterAttribute</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionContext</span> context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>context<span class=\"token punctuation\">.</span>ExceptionHandled<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            context<span class=\"token punctuation\">.</span>Result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">JsonResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                Code <span class=\"token operator\">=</span> <span class=\"token string\">\"500\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                Res <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    Data <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>Exception<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    Msg <span class=\"token operator\">=</span> <span class=\"token string\">\"接口发生错误\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            context<span class=\"token punctuation\">.</span>ExceptionHandled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"然后在startup类下面的configureservices方法下面全局注册一下\"><a class=\"markdownIt-Anchor\" href=\"#然后在startup类下面的configureservices方法下面全局注册一下\">#</a> 然后在 Startup 类下面的 ConfigureServices 方法下面全局注册一下</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 此方法由运行时调用，使用此方法将服务添加到容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ConfigureServices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddControllers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 全局配置 Json 序列化大小写处理</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddMvc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddJsonOptions</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        options<span class=\"token punctuation\">.</span>JsonSerializerOptions<span class=\"token punctuation\">.</span>PropertyNamingPolicy <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        options<span class=\"token punctuation\">.</span>JsonSerializerOptions<span class=\"token punctuation\">.</span>DictionaryKeyPolicy <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 全局注册异常类</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddMvc</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        options<span class=\"token punctuation\">.</span>Filters<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Add</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ExceptionFilter<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 解决中文被编码</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddControllersWithViews</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddJsonOptions</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        options<span class=\"token punctuation\">.</span>JsonSerializerOptions<span class=\"token punctuation\">.</span>Encoder <span class=\"token operator\">=</span> JavaScriptEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>UnicodeRanges<span class=\"token punctuation\">.</span>All<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"为了防止返回的json大小写不匹配我还加了json大小写处理确定json输出和后台定义的格式以及大小写一致和返回的中文乱码情况\"><a class=\"markdownIt-Anchor\" href=\"#为了防止返回的json大小写不匹配我还加了json大小写处理确定json输出和后台定义的格式以及大小写一致和返回的中文乱码情况\">#</a> 为了防止返回的 Json 大小写不匹配，我还加了 Json 大小写处理，确定 Json 输出和后台定义的格式以及大小写一致，和返回的中文乱码情况</h3>\n<h3 id=\"在接口报错的时候会返回后台固定的code用来判断接口状态\"><a class=\"markdownIt-Anchor\" href=\"#在接口报错的时候会返回后台固定的code用来判断接口状态\">#</a> 在接口报错的时候会返回后台固定的 Code，用来判断接口状态</h3>\n<p><img data-src=\"error.png\" alt=\"异常分析\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://lovetianci.cn/2020/06/10/csharp0610/",
            "url": "https://lovetianci.cn/2020/06/10/csharp0610/",
            "title": ".NET Core 部署IIS",
            "date_published": "2020-06-10T07:30:00.000Z",
            "content_html": "<h2 id=\"记录net\"><a class=\"markdownIt-Anchor\" href=\"#记录net\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS13MnQ1MDBoLk5FVA==\">记录.NET</span> Core 部署 IIS 遇到的坑</h2>\n<h3 id=\"vs2019发布项目到文件夹然后拷贝到服务器这些正常流程结束后访问api出现以下情况\"><a class=\"markdownIt-Anchor\" href=\"#vs2019发布项目到文件夹然后拷贝到服务器这些正常流程结束后访问api出现以下情况\">#</a> VS2019 发布项目到文件夹，然后拷贝到服务器，这些正常流程结束后访问 api，出现以下情况</h3>\n<h3 id=\"第一种500错误\"><a class=\"markdownIt-Anchor\" href=\"#第一种500错误\">#</a> 第一种 500 错误</h3>\n<p><img data-src=\"500.jpg\" alt=\"500错误\"></p>\n<h3 id=\"第二种502错误\"><a class=\"markdownIt-Anchor\" href=\"#第二种502错误\">#</a> 第二种 502 错误</h3>\n<p><img data-src=\"502.jpg\" alt=\"502错误\"></p>\n<h3 id=\"百度了很多得到以下解决方案\"><a class=\"markdownIt-Anchor\" href=\"#百度了很多得到以下解决方案\">#</a> 百度了很多得到以下解决方案</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC52aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS9kb3dubG9hZC9wci83YzMwZDNhMS1mNTE5LTQxNjctYjg1MC1iOWM0OWJmMmFhMGUvZGJmYTk1N2E3NmE0MWExZTE3OTVmNTlkNDAwZDRjY2QvZG90bmV0LWhvc3RpbmctMy4xLjUtd2luLmV4ZQ==\">点击下载：dotnet-hosting-3.1.5-win.exe</span></p>\n<h3 id=\"下载并且安装net\"><a class=\"markdownIt-Anchor\" href=\"#下载并且安装net\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS1naHFzYTk0NGh0emNtMTBmMG9pLk5FVA==\">下载并且安装.NET</span> Core 托管捆绑包安装程序</h3>\n<h3 id=\"重新启动iis或者重新添加网站发布启动即可访问成功\"><a class=\"markdownIt-Anchor\" href=\"#重新启动iis或者重新添加网站发布启动即可访问成功\">#</a> 重新启动 IIS 或者重新添加网站，发布启动即可访问成功</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://lovetianci.cn/2020/04/03/csharp0403/",
            "url": "https://lovetianci.cn/2020/04/03/csharp0403/",
            "title": "C# Reamrk特性",
            "date_published": "2020-04-03T03:11:11.000Z",
            "content_html": "<h2 id=\"remark特性的应用场景\"><a class=\"markdownIt-Anchor\" href=\"#remark特性的应用场景\">#</a> Remark 特性的应用场景</h2>\n<a id=\"more\"></a>\n<h3 id=\"场景一用户状态的枚举值定义的是英文的字段需要输出中文含义-枚举定义如下\"><a class=\"markdownIt-Anchor\" href=\"#场景一用户状态的枚举值定义的是英文的字段需要输出中文含义-枚举定义如下\">#</a> 场景一：用户状态的枚举值，定义的是英文的字段，需要输出中文含义。枚举定义如下：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">UserState</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 正常</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Normal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// 冻结</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Frozen <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/// 删除</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Deleted <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"普通做法根据枚举值进行判断然后输出中文含义\"><a class=\"markdownIt-Anchor\" href=\"#普通做法根据枚举值进行判断然后输出中文含义\">#</a> 普通做法：根据枚举值进行判断，然后输出中文含义：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">UserState</span> userState <span class=\"token operator\">=</span> UserState<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>userState<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">case</span> UserState<span class=\"token punctuation\">.</span>Deleted<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">case</span> UserState<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">case</span> UserState<span class=\"token punctuation\">.</span>Frozen<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冻结\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"这种写法违反开不原则不利于以后的扩展下面使用特性实现\"><a class=\"markdownIt-Anchor\" href=\"#这种写法违反开不原则不利于以后的扩展下面使用特性实现\">#</a> 这种写法违反开不原则，不利于以后的扩展，下面使用特性实现</h3>\n<h3 id=\"先定义remark特性\"><a class=\"markdownIt-Anchor\" href=\"#先定义remark特性\">#</a> 先定义 Remark 特性：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">TianciAttribute</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// 特性</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RemarkAttribute</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Attribute</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _Remark <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">/// 有参构造函数</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"remark\">&lt;/param></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">RemarkAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> remark<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_Remark <span class=\"token operator\">=</span> remark<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> _Remark<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"userstate枚举修改如下\"><a class=\"markdownIt-Anchor\" href=\"#userstate枚举修改如下\">#</a> UserState 枚举修改如下：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">UserState</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 正常</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token function\">Remark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Normal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// 冻结</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token function\">Remark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冻结\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Frozen <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// 删除</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token function\">Remark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    Deleted <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"写一个扩展方法对enum类型进行扩展\"><a class=\"markdownIt-Anchor\" href=\"#写一个扩展方法对enum类型进行扩展\">#</a> 写一个扩展方法，对 Enum 类型进行扩展：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Reflection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">TianciAttribute</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RemarkExtension</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">/// Enum 的扩展方法，静态类，静态方法，第一个参数前面添加 this</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"value\">&lt;/param></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">Enum</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 获取类型</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\">Type</span> type <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\">// 获取字段</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token class-name\">FieldInfo</span> fieId <span class=\"token operator\">=</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">GetField</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// 判断字段上面是否定义了 ReamrkAttribute 特性</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fieId<span class=\"token punctuation\">.</span><span class=\"token function\">IsDefined</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">RemarkAttribute</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token comment\">// 创建实例</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token class-name\">RemarkAttribute</span> attribute <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>RemarkAttribute<span class=\"token punctuation\">)</span>fieId<span class=\"token punctuation\">.</span><span class=\"token function\">GetCustomAttribute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">RemarkAttribute</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">return</span> attribute<span class=\"token punctuation\">.</span><span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"最后main方法里面调用\"><a class=\"markdownIt-Anchor\" href=\"#最后main方法里面调用\">#</a> 最后 Main () 方法里面调用</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">TianciAttribute</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">UserState</span> userState <span class=\"token operator\">=</span> UserState<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>userState<span class=\"token punctuation\">.</span><span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"输出结果\"><a class=\"markdownIt-Anchor\" href=\"#输出结果\">#</a> 输出结果</h3>\n<p><img data-src=\"Normal.png\" alt=\"输出结果\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://lovetianci.cn/2020/03/06/interview0306/",
            "url": "https://lovetianci.cn/2020/03/06/interview0306/",
            "title": "C#理论面试题",
            "date_published": "2020-03-06T05:14:20.000Z",
            "content_html": "<h2 id=\"这次的面试题大多为理论知识\"><a class=\"markdownIt-Anchor\" href=\"#这次的面试题大多为理论知识\">#</a> 这次的面试题大多为理论知识</h2>\n<a id=\"more\"></a>\n<h2 id=\"1-数组有没有length方法string有没有length方法\"><a class=\"markdownIt-Anchor\" href=\"#1-数组有没有length方法string有没有length方法\">#</a> 1. 数组有没有 length () 方法，String 有没有 length () 方法？</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> sz <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"很明显这两个都有length方法\"><a class=\"markdownIt-Anchor\" href=\"#很明显这两个都有length方法\">#</a> 很明显这两个都有 length () 方法</h3>\n<h2 id=\"2-谈谈finalfinallyfinalize的区别\"><a class=\"markdownIt-Anchor\" href=\"#2-谈谈finalfinallyfinalize的区别\">#</a> 2. 谈谈 final，finally，finalize 的区别</h2>\n<pre><code>final ：修饰符（关键字）如果类被声明为final,就不能再派生新的子类也不能作为父类被继承\nfinally ：在异常处理时提供finally块来执行操作，不管有没有异常，finally里面的代码始终会被执行\nfinalize ：方法名，finalize是在Object类中定义的，所有的类都继承了它\n</code></pre>\n<h2 id=\"3-如何处理几十万条并发数据\"><a class=\"markdownIt-Anchor\" href=\"#3-如何处理几十万条并发数据\">#</a> 3. 如何处理几十万条并发数据</h2>\n<pre><code>使用缓存，访问过的数据不需要二次访问数据库\n数据库使用存储过程，尽量分页\n使用多线程分批次处理\n使用WebService\n</code></pre>\n<h2 id=\"4-堆和栈的区别\"><a class=\"markdownIt-Anchor\" href=\"#4-堆和栈的区别\">#</a> 4. 堆和栈的区别</h2>\n<pre><code>栈：由编译器自动分配、释放，在函数体中定义的变量通常在栈上\n堆：由程序员分配释放，用new、malloc分配内存函数得到的就是在堆上\n</code></pre>\n<h2 id=\"5-成员变量和成员函数前加static的作用\"><a class=\"markdownIt-Anchor\" href=\"#5-成员变量和成员函数前加static的作用\">#</a> 5. 成员变量和成员函数前加 static 的作用</h2>\n<pre><code>它们被称为常成员变量和常成员函数，又称为类成员变量和类成员函数，分别用来反映类的状态，\n比如类成员变量可以用来统计类实例的数量，类成员函数负责这种统计的动作\n</code></pre>\n<h2 id=\"6-c可否直接对内存进行操作\"><a class=\"markdownIt-Anchor\" href=\"#6-c可否直接对内存进行操作\">#</a> 6. C# 可否直接对内存进行操作</h2>\n<pre><code>C#可以直接对内存进行操作。但是默认情况下，为了保持类型安全，C#不支持指针运算\n但是可以通过使用unsafe关键字，定义可使用指针的不安全代码\n</code></pre>\n<h2 id=\"7-const和readonly\"><a class=\"markdownIt-Anchor\" href=\"#7-const和readonly\">#</a> 7. Const 和 ReadOnly？</h2>\n<pre><code>Const关键字用来声明编译时常量\nReadOnly用来声明运行时常量\n</code></pre>\n<h2 id=\"8-string和stringbuffer的区别和优缺点\"><a class=\"markdownIt-Anchor\" href=\"#8-string和stringbuffer的区别和优缺点\">#</a> 8. String 和 StringBuffer 的区别和优缺点</h2>\n<pre><code>String类表示内容不可改变的字符串\nStringBuffer类表示内容可以被修改的字符串\nStringBuffer的执行速度要大于String\n</code></pre>\n<h2 id=\"9-产生一个int数组长度为100并向其中随即插入1-100且不能重复\"><a class=\"markdownIt-Anchor\" href=\"#9-产生一个int数组长度为100并向其中随即插入1-100且不能重复\">#</a> 9. 产生一个 int 数组，长度为 100，并向其中随即插入 1-100，且不能重复</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> lst <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Random</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> temp <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Next</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lst<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        lst<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lst<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"10-打印九九乘法表\"><a class=\"markdownIt-Anchor\" href=\"#10-打印九九乘法表\">#</a> 10. 打印九九乘法表</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;0&#125;*&#123;1&#125;=&#123;2,2&#125; \"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"先到这里吧\"><a class=\"markdownIt-Anchor\" href=\"#先到这里吧\">#</a> 先到这里吧！</h3>\n<p><img data-src=\"bug.jpg\" alt=\"日常自嘲\"></p>\n",
            "tags": [
                "面试题"
            ]
        },
        {
            "id": "https://lovetianci.cn/2020/03/03/interview0303/",
            "url": "https://lovetianci.cn/2020/03/03/interview0303/",
            "title": "C#简单面试题",
            "date_published": "2020-03-03T02:20:30.000Z",
            "content_html": "<h2 id=\"记录一下遇到过的面试题\"><a class=\"markdownIt-Anchor\" href=\"#记录一下遇到过的面试题\">#</a> 记录一下遇到过的面试题</h2>\n<a id=\"more\"></a>\n<p><img data-src=\"low.png\" alt=\"我怎么这么垃圾，我要有技术会是这鬼样？\"></p>\n<h2 id=\"先看一下第一题\"><a class=\"markdownIt-Anchor\" href=\"#先看一下第一题\">#</a> 先看一下第一题</h2>\n<p><img data-src=\"ToString.png\" alt=\"ToString用法\"></p>\n<h3 id=\"tostring的方法摘要使用指定的格式将此实例的数值转换为它的等效字符串表示形式\"><a class=\"markdownIt-Anchor\" href=\"#tostring的方法摘要使用指定的格式将此实例的数值转换为它的等效字符串表示形式\">#</a> ToString 的方法摘要：使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</h3>\n<h3 id=\"我理解的意思是tostring不跟参数就直接转换为字符串而跟参数则根据参数的格式把相应变量转换成指定格式\"><a class=\"markdownIt-Anchor\" href=\"#我理解的意思是tostring不跟参数就直接转换为字符串而跟参数则根据参数的格式把相应变量转换成指定格式\">#</a> 我理解的意思是：ToString 不跟参数，就直接转换为字符串，而跟参数，则根据参数的格式，把相应变量转换成指定格式</h3>\n<h3 id=\"上题要求consolewriteline里面输出的是多少通过答案我们大胆猜测一下答案中的8为strlength为str字符串的长度等于8而不是因为str的最后一位数是800为变换后的格式格式为两位数而8是个位数所以答案为08\"><a class=\"markdownIt-Anchor\" href=\"#上题要求consolewriteline里面输出的是多少通过答案我们大胆猜测一下答案中的8为strlength为str字符串的长度等于8而不是因为str的最后一位数是800为变换后的格式格式为两位数而8是个位数所以答案为08\">#</a> 上题要求 Console.WriteLine 里面输出的是多少，通过答案我们大胆猜测一下，答案中的 8 为 str.Length 为 str 字符串的长度等于 8，而不是因为 str 的最后一位数是 8，“00&quot; 为变换后的格式，格式为两位数，而 8 是个位数，所以答案为 08</h3>\n<h3 id=\"然后我又看到了这样一段话\"><a class=\"markdownIt-Anchor\" href=\"#然后我又看到了这样一段话\">#</a> 然后我又看到了这样一段话</h3>\n<p><img data-src=\"ToString2.png\" alt=\"ToString\"></p>\n<h3 id=\"表达能力不好意思大致是这样的如果数值小数位数例如1245与格式000后的小数位数多一位那么结果将会把最后一位给四舍五入掉直接上代码看一下结果等于125\"><a class=\"markdownIt-Anchor\" href=\"#表达能力不好意思大致是这样的如果数值小数位数例如1245与格式000后的小数位数多一位那么结果将会把最后一位给四舍五入掉直接上代码看一下结果等于125\">#</a> 表达能力不好，意思大致是这样的：如果数值小数位数 (例如：12.45) 与格式（“00.0”）后的小数位数多一位，那么结果将会把最后一位给四舍五入掉，直接上代码看一下结果等于 12.5</h3>\n<p><img data-src=\"ToString3.png\" alt=\"ToString\"></p>\n<h2 id=\"第二题打印出2000-2500之间所有的闰年年份必须满足两个条件1年份必须为4的倍数2年份如果为100的倍数必须同为400的倍数\"><a class=\"markdownIt-Anchor\" href=\"#第二题打印出2000-2500之间所有的闰年年份必须满足两个条件1年份必须为4的倍数2年份如果为100的倍数必须同为400的倍数\">#</a> 第二题，打印出 2000-2500 之间所有的闰年年份，必须满足两个条件：1：年份必须为 4 的倍数，2：年份如果为 100 的倍数，必须同为 400 的倍数</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> a <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 年份为 4 的倍数，年份如果为 100 的倍数必须同为 400 的倍数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"第三题打印出12320的和说白了就是1-20的阶乘之和\"><a class=\"markdownIt-Anchor\" href=\"#第三题打印出12320的和说白了就是1-20的阶乘之和\">#</a> 第三题，打印出 1+2!+3!+…+20! 的和，说白了就是 1-20 的阶乘之和</h2>\n<h3 id=\"第一种方法\"><a class=\"markdownIt-Anchor\" href=\"#第一种方法\">#</a> 第一种方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        sum <span class=\"token operator\">+=</span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"第二种方法\"><a class=\"markdownIt-Anchor\" href=\"#第二种方法\">#</a> 第二种方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        temp <span class=\"token operator\">*=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sum <span class=\"token operator\">+=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"最后一题写出一个方法参数是三个整数xyz按从小到大排序\"><a class=\"markdownIt-Anchor\" href=\"#最后一题写出一个方法参数是三个整数xyz按从小到大排序\">#</a> 最后一题，写出一个方法，参数是三个整数（x,y,z），按从小到大排序</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PaiXu</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> z<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Array<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从小到大结果依次为：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"如果题目要求从用户输入的三个整数来进行排序的话可以这样写\"><a class=\"markdownIt-Anchor\" href=\"#如果题目要求从用户输入的三个整数来进行排序的话可以这样写\">#</a> 如果题目要求从用户输入的三个整数来进行排序的话，可以这样写</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入三个整数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入第&#123;0&#125;个数字\"</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 从小到大排序</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Array<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数字从小到大依次为：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"行了行了就这样吧\"><a class=\"markdownIt-Anchor\" href=\"#行了行了就这样吧\">#</a> 行了行了就这样吧！！！</h3>\n",
            "tags": [
                "面试题"
            ]
        },
        {
            "id": "https://lovetianci.cn/2020/02/10/csharp0210/",
            "url": "https://lovetianci.cn/2020/02/10/csharp0210/",
            "title": "C#扩展方法",
            "date_published": "2020-02-10T14:00:00.000Z",
            "content_html": "<h2 id=\"c扩展方法\"><a class=\"markdownIt-Anchor\" href=\"#c扩展方法\">#</a> C# 扩展方法</h2>\n<a id=\"more\"></a>\n<h2 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\">#</a> 定义</h2>\n<h3 id=\"1-声明扩展方法的类必须为static类\"><a class=\"markdownIt-Anchor\" href=\"#1-声明扩展方法的类必须为static类\">#</a> 1. 声明扩展方法的类必须为 static 类；</h3>\n<h3 id=\"2-扩展方法本身也必须声明为static\"><a class=\"markdownIt-Anchor\" href=\"#2-扩展方法本身也必须声明为static\">#</a> 2. 扩展方法本身也必须声明为 static；</h3>\n<h3 id=\"3-扩展方法必须包含关键字this作为第一个参数类型并在后面跟着它所扩展的类型的名称\"><a class=\"markdownIt-Anchor\" href=\"#3-扩展方法必须包含关键字this作为第一个参数类型并在后面跟着它所扩展的类型的名称\">#</a> 3. 扩展方法必须包含关键字 this 作为第一个参数类型，并在后面跟着它所扩展的类型的名称。</h3>\n<h2 id=\"开始操作\"><a class=\"markdownIt-Anchor\" href=\"#开始操作\">#</a> 开始操作</h2>\n<h3 id=\"先创建一个静态类叫stringextension\"><a class=\"markdownIt-Anchor\" href=\"#先创建一个静态类叫stringextension\">#</a> 先创建一个静态类叫 StringExtension</h3>\n<h3 id=\"然后简单写一个静态方法我这里写的是布尔用来判断入参是否等于1\"><a class=\"markdownIt-Anchor\" href=\"#然后简单写一个静态方法我这里写的是布尔用来判断入参是否等于1\">#</a> 然后简单写一个静态方法，我这里写的是布尔，用来判断入参是否等于 1</h3>\n<h3 id=\"控制器导入扩展方法所在的类的命名空间限制扩展方法的使用\"><a class=\"markdownIt-Anchor\" href=\"#控制器导入扩展方法所在的类的命名空间限制扩展方法的使用\">#</a> 控制器导入扩展方法所在的类的命名空间，限制扩展方法的使用</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StringExtension</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// Remark：判断输入的是不是 1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"input\">&lt;/param></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsOne</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> input<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><!-- ![扩展方法](Extension.png \"扩展方法\") -->\n<h3 id=\"接口调用方法传参为1返回true\"><a class=\"markdownIt-Anchor\" href=\"#接口调用方法传参为1返回true\">#</a> 接口调用方法，传参为 1，返回 true</h3>\n<p><img data-src=\"code.png\" alt=\"调用接口\" title=\"调用接口\"></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<h3 id=\"-扩展方法必须定义在静态类中扩展方法本身也是静态方法扩展方法也可以重载\"><a class=\"markdownIt-Anchor\" href=\"#-扩展方法必须定义在静态类中扩展方法本身也是静态方法扩展方法也可以重载\">#</a> - 扩展方法必须定义在静态类中，扩展方法本身也是静态方法，扩展方法也可以重载。</h3>\n<h3 id=\"-如果扩展方法和对应的类位于不同的命名空间使用时应引入扩展方法所在静态类的命名空间\"><a class=\"markdownIt-Anchor\" href=\"#-如果扩展方法和对应的类位于不同的命名空间使用时应引入扩展方法所在静态类的命名空间\">#</a> - 如果扩展方法和对应的类位于不同的命名空间，使用时应引入扩展方法所在静态类的命名空间。</h3>\n<h3 id=\"-当类本身的方法与扩展方法重名时类本身的方法被优先调用-建议通过命名空间的方式来限制扩展方法的使用\"><a class=\"markdownIt-Anchor\" href=\"#-当类本身的方法与扩展方法重名时类本身的方法被优先调用-建议通过命名空间的方式来限制扩展方法的使用\">#</a> - 当类本身的方法与扩展方法重名时，类本身的方法被优先调用。（建议通过命名空间的方式来限制扩展方法的使用）</h3>\n<h3 id=\"-扩展方法不要过多使用-尤其是系统定义的类不要随意增加扩展方法\"><a class=\"markdownIt-Anchor\" href=\"#-扩展方法不要过多使用-尤其是系统定义的类不要随意增加扩展方法\">#</a> - 扩展方法不要过多使用。尤其是系统定义的类，不要随意增加扩展方法。</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://lovetianci.cn/2020/02/03/csharp0203/",
            "url": "https://lovetianci.cn/2020/02/03/csharp0203/",
            "title": "WebAPI全局异常处理",
            "date_published": "2020-02-03T13:21:21.000Z",
            "content_html": "<h2 id=\"记录一下webapi的全局异常处理\"><a class=\"markdownIt-Anchor\" href=\"#记录一下webapi的全局异常处理\">#</a> 记录一下 WebAPI 的全局异常处理</h2>\n<a id=\"more\"></a>\n<h3 id=\"通常接口出现一些小错误页面会返回一堆看不懂的代码\"><a class=\"markdownIt-Anchor\" href=\"#通常接口出现一些小错误页面会返回一堆看不懂的代码\">#</a> 通常接口出现一些小错误，页面会返回一堆看不懂的代码</h3>\n<h3 id=\"这对于我们寻找错误并没有什么太大的帮助反而看着很难受\"><a class=\"markdownIt-Anchor\" href=\"#这对于我们寻找错误并没有什么太大的帮助反而看着很难受\">#</a> 这对于我们寻找错误并没有什么太大的帮助，反而看着很难受</h3>\n<p><img data-src=\"errormsg.png\" alt=\"错误信息\" title=\"错误信息\"></p>\n<h3 id=\"遇到这种情况我们可以写一个全局异常过滤器接口报错直接跳到过滤器\"><a class=\"markdownIt-Anchor\" href=\"#遇到这种情况我们可以写一个全局异常过滤器接口报错直接跳到过滤器\">#</a> 遇到这种情况我们可以写一个全局异常过滤器，接口报错直接跳到过滤器</h3>\n<h3 id=\"首先新建一个actionfilter类继承至exceptionfilterattribute\"><a class=\"markdownIt-Anchor\" href=\"#首先新建一个actionfilter类继承至exceptionfilterattribute\">#</a> 首先新建一个 ActionFilter 类，继承至 ExceptionFilterAttribute</h3>\n<h3 id=\"代码如下\"><a class=\"markdownIt-Anchor\" href=\"#代码如下\">#</a> 代码如下</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// Remark: 过滤掉 WebApi 接口的异常，统一返回异常信息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ActionFilter</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ExceptionFilterAttribute</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpActionExecutedContext</span> context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 记录错误日志</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//LogHelper.Error($\"&#123;context.Exception &#125;\", context.Request.RequestUri.AbsolutePath);</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 篡改 Response  </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        context<span class=\"token punctuation\">.</span>Response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HttpResponseMessage</span><span class=\"token punctuation\">(</span>HttpStatusCode<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Content <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringContent</span><span class=\"token punctuation\">(</span>JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                code <span class=\"token operator\">=</span> <span class=\"token string\">\"520\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                res <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    msg <span class=\"token operator\">=</span> <span class=\"token string\">\"接口有问题\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><!-- ![ActionFilter](code.png \"ActionFilter\") -->\n<h3 id=\"然后在webapiconfig类里面全局配置\"><a class=\"markdownIt-Anchor\" href=\"#然后在webapiconfig类里面全局配置\">#</a> 然后在 WebApiConfig 类里面全局配置</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebApiConfig</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpConfiguration</span> config<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// Web API 配置和服务</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// Web API 路由</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        config<span class=\"token punctuation\">.</span><span class=\"token function\">MapHttpAttributeRoutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        config<span class=\"token punctuation\">.</span>Routes<span class=\"token punctuation\">.</span><span class=\"token function\">MapHttpRoute</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"DefaultApi\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token named-parameter punctuation\">routeTemplate</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"api/&#123;controller&#125;/&#123;id&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token named-parameter punctuation\">defaults</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">&#123;</span> id <span class=\"token operator\">=</span> RouteParameter<span class=\"token punctuation\">.</span>Optional <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 全局注册异常过滤器</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        config<span class=\"token punctuation\">.</span>Filters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ActionFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><!-- ![WebApiConfig](code2.png \"WebApiConfig\") -->\n<h3 id=\"只要接口出现异常就会跳到这个地方返回我们定义的信息\"><a class=\"markdownIt-Anchor\" href=\"#只要接口出现异常就会跳到这个地方返回我们定义的信息\">#</a> 只要接口出现异常就会跳到这个地方，返回我们定义的信息</h3>\n<p><img data-src=\"backmsg.png\" alt=\"返回信息\" title=\"返回信息\"></p>\n<h3 id=\"可以看到尽管接口已经抛出异常了但是网页返回的信息依旧是我所定义的\"><a class=\"markdownIt-Anchor\" href=\"#可以看到尽管接口已经抛出异常了但是网页返回的信息依旧是我所定义的\">#</a> 可以看到，尽管接口已经抛出异常了，但是网页返回的信息依旧是我所定义的</h3>\n<h3 id=\"错误信息可以打印到日志避免接口信息泄露具体打印日志下期再说\"><a class=\"markdownIt-Anchor\" href=\"#错误信息可以打印到日志避免接口信息泄露具体打印日志下期再说\">#</a> 错误信息可以打印到日志，避免接口信息泄露，具体打印日志下期再说</h3>\n<h1 id=\"学业繁忙告辞\"><a class=\"markdownIt-Anchor\" href=\"#学业繁忙告辞\">#</a> 学业繁忙，告辞</h1>\n<p><img data-src=\"byebye.jpg\" alt=\"告辞\" title=\"告辞\"></p>\n",
            "tags": [
                "技术"
            ]
        }
    ]
}